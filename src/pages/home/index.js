import React, { useEffect, useState } from "react";
import BottomPopupViewWithButton from "./component/BottomPopupButton";

const bottomButtonData = [
  {
    name: "Persona",
    placement: "topLeft",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        className="me-2"
      >
        <path
          d="M12 0C8.51067 0 5.67188 2.8388 5.67188 6.32812C5.67188 9.81745 8.51067 12.6562 12 12.6562C15.4893 12.6562 18.3281 9.81745 18.3281 6.32812C18.3281 2.8388 15.4893 0 12 0ZM19.8734 16.7904C18.1409 15.0313 15.8442 14.0625 13.4062 14.0625H10.5938C8.15588 14.0625 5.85909 15.0313 4.12659 16.7904C2.40258 18.5409 1.45312 20.8515 1.45312 23.2969C1.45312 23.6852 1.76794 24 2.15625 24H21.8438C22.2321 24 22.5469 23.6852 22.5469 23.2969C22.5469 20.8515 21.5974 18.5409 19.8734 16.7904Z"
          fill="white"
        />
      </svg>
    ),
  },
  {
    name: "Group",
    placement: "topLeft",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
        className="me-2"
      >
        <g clipPath="url(#clip0_70_1535)">
          <path
            d="M14.983 5.36793C16.0927 6.0637 16.8708 7.24109 17.0125 8.60777C17.4778 8.82667 17.9856 8.94038 18.4999 8.94083C20.444 8.94083 22.0197 7.36509 22.0197 5.42125C22.0197 3.47711 20.444 1.90137 18.4999 1.90137C16.5743 1.90197 15.0123 3.44955 14.983 5.36793ZM12.677 12.5748C14.6212 12.5748 16.1969 10.9988 16.1969 9.05494C16.1969 7.1111 14.6209 5.53536 12.677 5.53536C10.7332 5.53536 9.15653 7.1114 9.15653 9.05524C9.15653 10.9991 10.7332 12.5748 12.677 12.5748ZM14.1701 12.8147H11.1833C8.69828 12.8147 6.67656 14.8367 6.67656 17.3218V20.9744L6.68585 21.0316L6.93744 21.1104C9.30899 21.8513 11.3693 22.0984 13.0652 22.0984C16.3775 22.0984 18.2974 21.1541 18.4157 21.0939L18.6508 20.975H18.676V17.3218C18.6769 14.8367 16.6551 12.8147 14.1701 12.8147ZM19.9935 9.18104H17.0298C16.9997 10.3254 16.5185 11.4115 15.691 12.2025C17.8999 12.8594 19.5161 14.9077 19.5161 17.3272V18.4528C22.4423 18.3455 24.1286 17.5162 24.2397 17.4605L24.4748 17.3413H24.5V13.6875C24.5 11.2028 22.4783 9.18104 19.9935 9.18104ZM6.50075 8.94143C7.18933 8.94143 7.82999 8.74045 8.37271 8.39811C8.543 7.29664 9.12901 6.30234 10.0101 5.61982C10.0137 5.55393 10.02 5.48864 10.02 5.42215C10.02 3.47801 8.44399 1.90227 6.50075 1.90227C4.55631 1.90227 2.98087 3.47801 2.98087 5.42215C2.98087 7.36539 4.55631 8.94143 6.50075 8.94143ZM9.66181 12.2025C8.83893 11.4153 8.35842 10.3361 8.32389 9.19781C8.21397 9.18972 8.10524 9.18104 7.99322 9.18104H5.00678C2.52171 9.18104 0.5 11.2028 0.5 13.6875V17.3407L0.509285 17.397L0.760876 17.4764C2.66338 18.0703 4.36133 18.344 5.83613 18.4303V17.3272C5.83673 14.9077 7.4523 12.86 9.66181 12.2025Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_70_1535">
            <rect
              width="24"
              height="24"
              fill="white"
              transform="translate(0.5)"
            />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "App",
    placement: "top",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        className="me-2"
      >
        <g clipPath="url(#clip0_70_1538)">
          <path
            d="M8.0175 0.75H3.2325C1.86145 0.75 0.75 1.86145 0.75 3.2325V8.0175C0.75 9.38855 1.86145 10.5 3.2325 10.5H8.0175C9.38855 10.5 10.5 9.38855 10.5 8.0175V3.2325C10.5 1.86145 9.38855 0.75 8.0175 0.75Z"
            fill="white"
          />
          <path
            d="M20.7675 0.75H15.9825C14.6115 0.75 13.5 1.86145 13.5 3.2325V8.0175C13.5 9.38855 14.6115 10.5 15.9825 10.5H20.7675C22.1385 10.5 23.25 9.38855 23.25 8.0175V3.2325C23.25 1.86145 22.1385 0.75 20.7675 0.75Z"
            fill="white"
          />
          <path
            d="M8.0175 13.5H3.2325C1.86145 13.5 0.75 14.6115 0.75 15.9825V20.7675C0.75 22.1385 1.86145 23.25 3.2325 23.25H8.0175C9.38855 23.25 10.5 22.1385 10.5 20.7675V15.9825C10.5 14.6115 9.38855 13.5 8.0175 13.5Z"
            fill="white"
          />
          <path
            d="M18.375 23.25C21.0674 23.25 23.25 21.0674 23.25 18.375C23.25 15.6826 21.0674 13.5 18.375 13.5C15.6826 13.5 13.5 15.6826 13.5 18.375C13.5 21.0674 15.6826 23.25 18.375 23.25Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_70_1538">
            <rect width="24" height="24" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "Function",
    placement: "topRight",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        className="me-2"
      >
        <g clipPath="url(#clip0_70_1663)">
          <path
            d="M14.5875 16.4814C14.5875 16.3981 14.5583 16.3147 14.5 16.2315C14.0333 15.6729 13.6584 15.1937 13.3749 14.794C13.5499 14.4524 13.6833 14.1357 13.7747 13.8443L15.7123 13.5443C15.7875 13.5358 15.8542 13.4922 15.9124 13.4132C15.9707 13.3337 15.9996 13.2526 15.9996 13.1693V10.8566C15.9996 10.7651 15.9707 10.6837 15.9124 10.613C15.8542 10.5423 15.7833 10.4984 15.7 10.482L13.7998 10.1945C13.708 9.91107 13.5664 9.56922 13.3748 9.1694C13.4996 8.98595 13.6874 8.73587 13.9374 8.41937C14.1873 8.10265 14.3626 7.87775 14.4624 7.74439C14.5208 7.66107 14.5499 7.58183 14.5499 7.50691C14.5499 7.28188 13.9498 6.61521 12.7502 5.50683C12.6669 5.44028 12.5794 5.40696 12.4874 5.40696C12.3876 5.40696 12.3043 5.43581 12.2373 5.49439L10.7622 6.60689C10.4207 6.43194 10.1082 6.30283 9.82483 6.21925L9.53731 4.30685C9.52913 4.22354 9.4874 4.15051 9.4124 4.08808C9.33736 4.0256 9.25404 3.99429 9.16228 3.99429H6.83746C6.64583 3.99429 6.52083 4.09429 6.46251 4.29424C6.36243 4.67764 6.26668 5.31944 6.175 6.21925C5.81673 6.33588 5.4959 6.46924 5.21258 6.61924L3.77514 5.49435C3.69182 5.4359 3.60434 5.40692 3.51262 5.40692C3.35409 5.40692 3.02498 5.65271 2.52503 6.14447C2.025 6.63605 1.68315 7.00688 1.49997 7.25692C1.44156 7.32369 1.41253 7.407 1.41253 7.507C1.41253 7.58191 1.44152 7.66523 1.49997 7.75691C1.96655 8.31539 2.3415 8.79454 2.6249 9.19436C2.44995 9.5362 2.31667 9.8527 2.22508 10.1443L0.287516 10.4442C0.21243 10.4525 0.145837 10.4962 0.0874324 10.5752C0.0291587 10.6545 0 10.7357 0 10.8189V13.1314C0 13.2232 0.0291587 13.3043 0.0874324 13.375C0.145837 13.4461 0.216589 13.4856 0.300081 13.4939L2.20004 13.7939C2.30004 14.1104 2.44601 14.4522 2.63764 14.8188C2.50428 15.0023 2.30853 15.2566 2.05017 15.5814C1.79164 15.9066 1.62089 16.1274 1.53762 16.244C1.4793 16.3273 1.4501 16.4067 1.4501 16.4813C1.4501 16.7067 2.05017 17.3731 3.25015 18.4816C3.33346 18.5481 3.42085 18.5812 3.51266 18.5812C3.62098 18.5812 3.7043 18.5523 3.76257 18.4938L5.23754 17.3815C5.57908 17.5565 5.8916 17.6855 6.17504 17.7689L6.46256 19.6814C6.47079 19.7647 6.51255 19.8378 6.58747 19.9002C6.66246 19.9626 6.74578 19.9938 6.8375 19.9938H9.16232C9.35409 19.9938 9.479 19.8939 9.53736 19.6939C9.63735 19.3021 9.73311 18.6563 9.82487 17.7563C10.1569 17.6569 10.479 17.5273 10.7873 17.369L12.2248 18.4938C12.3081 18.5523 12.3956 18.5812 12.4873 18.5812C12.6457 18.5812 12.9729 18.3334 13.4687 17.8373C13.9643 17.3418 14.3082 16.9686 14.4999 16.7187C14.5583 16.6605 14.5875 16.5815 14.5875 16.4814ZM10.2623 14.2567C9.63749 14.8815 8.88326 15.194 8 15.194C7.11653 15.194 6.3623 14.8814 5.73744 14.2567C5.1125 13.6316 4.79998 12.8774 4.79998 11.9941C4.79998 11.1108 5.1125 10.3566 5.73744 9.73165C6.3623 9.10666 7.11657 8.79423 8 8.79423C8.88326 8.79423 9.63749 9.10662 10.2623 9.73165C10.8874 10.3566 11.1998 11.1108 11.1998 11.9941C11.1998 12.8774 10.8875 13.6316 10.2623 14.2567ZM22.1373 17.1316C22.0292 16.8901 21.904 16.6734 21.7625 16.4816C22.1876 15.5398 22.3999 14.9648 22.3999 14.7565C22.3999 14.7236 22.3835 14.6942 22.3499 14.6692C21.3497 14.0859 20.8332 13.7942 20.7999 13.7942L20.7249 13.8193C20.3833 14.1611 19.9998 14.6277 19.575 15.2194C19.4084 15.2028 19.2836 15.1942 19.2002 15.1942C19.1167 15.1942 18.9918 15.2028 18.8251 15.2194C18.7088 15.0442 18.4919 14.7628 18.1753 14.3755C17.8587 13.9883 17.6669 13.7943 17.6002 13.7943C17.5836 13.7943 17.4586 13.8609 17.2252 13.9946C16.9788 14.1353 16.733 14.277 16.4877 14.4196C16.2292 14.5699 16.0837 14.6529 16.0503 14.6697C16.0167 14.6945 16.0002 14.7239 16.0002 14.7569C16.0002 14.9655 16.2126 15.5401 16.6376 16.482C16.4962 16.6738 16.371 16.8904 16.2627 17.1318C15.021 17.2566 14.4001 17.3859 14.4001 17.5193V19.2691C14.4001 19.4025 15.021 19.5317 16.2627 19.6566C16.3625 19.8817 16.4876 20.0983 16.6376 20.3063C16.2126 21.2481 16.0002 21.8232 16.0002 22.0314C16.0002 22.0647 16.0167 22.094 16.0503 22.1189C17.0667 22.7106 17.5836 23.0064 17.6002 23.0064C17.6669 23.0064 17.8587 22.8105 18.1753 22.4188C18.4918 22.0271 18.7085 21.744 18.8251 21.569C18.9917 21.5854 19.1167 21.5937 19.2002 21.5937C19.2835 21.5937 19.4084 21.5854 19.575 21.569C19.6914 21.744 19.9082 22.0271 20.2248 22.4188C20.5414 22.8105 20.733 23.0064 20.7999 23.0064C20.8165 23.0064 21.3334 22.7104 22.3499 22.1189C22.3835 22.094 22.3999 22.0648 22.3999 22.0314C22.3999 21.8231 22.1873 21.2481 21.7625 20.3063C21.9125 20.0983 22.0374 19.8817 22.1373 19.6566C23.3791 19.5317 24 19.4025 24 19.2691V17.5193C24 17.3859 23.3791 17.2566 22.1373 17.1316ZM20.331 19.5253C20.0189 19.8378 19.6416 19.9944 19.1999 19.9944C18.7581 19.9944 18.381 19.8378 18.0687 19.5253C17.7562 19.2127 17.5997 18.8358 17.5997 18.3941C17.5997 17.9609 17.7583 17.5856 18.075 17.2692C18.3915 16.9526 18.7666 16.7942 19.1999 16.7942C19.6331 16.7942 20.0084 16.9524 20.3251 17.2692C20.6415 17.5856 20.8001 17.9609 20.8001 18.3941C20.7998 18.8358 20.6437 19.2127 20.331 19.5253ZM22.1373 4.33159C22.0292 4.08991 21.904 3.87328 21.7625 3.68147C22.1876 2.73994 22.3999 2.16491 22.3999 1.9566C22.3999 1.92341 22.3835 1.89412 22.3499 1.86908C21.3497 1.28577 20.8332 0.994141 20.7999 0.994141L20.7249 1.0191C20.3833 1.36095 19.9998 1.82748 19.575 2.41911C19.4084 2.40256 19.2836 2.39415 19.2002 2.39415C19.1167 2.39415 18.9918 2.40256 18.8251 2.41911C18.7088 2.24411 18.4919 1.9629 18.1753 1.57543C17.8587 1.18788 17.6669 0.994184 17.6002 0.994184C17.5836 0.994184 17.4586 1.06078 17.2252 1.19422C16.9789 1.33515 16.7331 1.47685 16.4877 1.61935C16.2292 1.76943 16.0837 1.8527 16.0503 1.86925C16.0167 1.89425 16.0002 1.92341 16.0002 1.95677C16.0002 2.16509 16.2126 2.74016 16.6376 3.68174C16.4962 3.8735 16.371 4.09009 16.2627 4.33176C15.021 4.45667 14.4001 4.58579 14.4001 4.71915V6.46915C14.4001 6.60242 15.021 6.73167 16.2627 6.85653C16.3625 7.08144 16.4876 7.29821 16.6376 7.50656C16.2126 8.44831 16.0002 9.02312 16.0002 9.23153C16.0002 9.26467 16.0167 9.29396 16.0503 9.31896C17.0667 9.91058 17.5836 10.2064 17.6002 10.2064C17.6669 10.2064 17.8587 10.0107 18.1753 9.61895C18.4918 9.22724 18.7085 8.94405 18.8251 8.76897C18.9917 8.78552 19.1167 8.79397 19.2002 8.79397C19.2835 8.79397 19.4084 8.78552 19.575 8.76897C19.6914 8.94405 19.9082 9.22719 20.2248 9.61895C20.5414 10.0107 20.733 10.2064 20.7999 10.2064C20.8165 10.2064 21.3334 9.91058 22.3499 9.31896C22.3835 9.29396 22.3999 9.2648 22.3999 9.23153C22.3999 9.02312 22.1873 8.44831 21.7625 7.50656C21.9125 7.29821 22.0374 7.08157 22.1373 6.85653C23.3791 6.73163 24 6.60242 24 6.46915V4.71915C24 4.58579 23.3791 4.45663 22.1373 4.33159ZM20.331 6.72532C20.0189 7.03788 19.6416 7.19414 19.1999 7.19414C18.7581 7.19414 18.381 7.03788 18.0687 6.72532C17.7562 6.41294 17.5997 6.0358 17.5997 5.59413C17.5997 5.16082 17.7583 4.78574 18.075 4.46906C18.3915 4.15239 18.7666 3.99403 19.1999 3.99403C19.6331 3.99403 20.0084 4.15257 20.3251 4.46906C20.6415 4.7857 20.8001 5.16082 20.8001 5.59413C20.7998 6.0358 20.6437 6.41294 20.331 6.72532Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_70_1663">
            <rect width="24" height="24" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "View",
    placement: "topRight",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
        className="me-2"
      >
        <g clipPath="url(#clip0_70_1551)">
          <path
            d="M23.9894 18.4174C23.5304 18.6524 22.9654 18.4727 22.7285 18.0112H22.7284C21.2909 15.21 17.4744 11.1939 12.5 11.1939C8.03877 11.1939 4.07422 14.4983 2.2715 18.0113C2.03436 18.471 1.46961 18.6525 1.00953 18.4161C0.549503 18.1798 0.36744 17.6161 0.603081 17.1557C2.6743 13.1113 7.2291 9.31894 12.5 9.31894C18.5112 9.31894 22.8165 14.0698 24.3968 17.1557C24.6328 17.6166 24.4504 18.1815 23.9894 18.4174ZM0.864269 8.34863L2.95227 10.2323C3.33899 10.5811 3.93158 10.5462 4.27635 10.1641C4.62313 9.77962 4.59266 9.18684 4.20819 8.84002L2.12019 6.95639C1.73586 6.60966 1.14308 6.64003 0.796112 7.02455C0.449331 7.40902 0.4798 8.0018 0.864269 8.34863ZM22.0476 10.2323L24.1355 8.34863C24.52 8.0018 24.5505 7.40902 24.2037 7.02455C23.8569 6.64012 23.2641 6.60956 22.8796 6.95639L20.7917 8.84002C20.4072 9.1868 20.3767 9.77962 20.7235 10.1641C21.0687 10.5466 21.6613 10.5807 22.0476 10.2323ZM12.4999 6.49472C13.0177 6.49472 13.4374 6.07495 13.4374 5.55722V2.74219C13.4374 2.22445 13.0177 1.80469 12.4999 1.80469C11.9821 1.80469 11.5624 2.22445 11.5624 2.74219V5.55722C11.5625 6.075 11.9822 6.49472 12.4999 6.49472ZM17.1054 17.5829C17.1054 20.1262 15.0394 22.1953 12.5 22.1953C9.96055 22.1953 7.89453 20.1262 7.89453 17.5829C7.89453 15.0396 9.96055 12.9704 12.5 12.9704C15.0394 12.9704 17.1054 15.0396 17.1054 17.5829ZM15.2304 17.5829C15.2304 16.0734 14.0056 14.8454 12.5 14.8454C10.9944 14.8454 9.76953 16.0734 9.76953 17.5829C9.76953 19.0923 10.9944 20.3203 12.5 20.3203C14.0055 20.3203 15.2304 19.0923 15.2304 17.5829Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_70_1551">
            <rect
              width="24"
              height="24"
              fill="white"
              transform="translate(0.5)"
            />
          </clipPath>
        </defs>
      </svg>
    ),
  },
];

const Home = () => {
  const [personaData, setpersonaData] = useState(null);
  const [selectedPersona, setselectedPersona] = useState(null);
  const [selectedGroup, setselectedGroup] = useState(null);
  const [selectedApp, setselectedApp] = useState(null);
  const [selectedFunction, setselectedFunction] = useState(null);
  const [selectedView, setselectedView] = useState(null);

  const [selectedIds, setselectedIds] = useState({
    persona: "",
    group: "",
    app: "",
    function: "",
    view: "",
  });

  useEffect(() => {
    let newselectedPersona = selectedPersona;

    if (personaData !== null) {
      if (
        selectedPersona?._id == selectedIds?.persona &&
        personaData?.persona
          ?.map((pdata) => pdata._id)
          ?.includes(selectedIds?.persona)
      ) {
        newselectedPersona = personaData?.persona?.filter((pdata) => {
          return pdata?._id == selectedIds?.persona;
        })[0];
      } else {
        newselectedPersona = personaData?.persona[0];
        setselectedIds({...selectedIds, persona : personaData?.persona[0]?._id})
      }
      setselectedPersona(newselectedPersona);
      localStorage.setItem("personasData", JSON.stringify(personaData));
    }
  }, [personaData]);

  useEffect(() => {
    let newselectedPersona = selectedPersona;
    let newselectedGroup = selectedGroup;

    if (newselectedPersona !== null) {
      if (
        newselectedGroup?._id == selectedIds?.group &&
        newselectedPersona?.groups
          ?.map((gdata) => gdata?._id)
          ?.includes(selectedIds?.group)
      ) {
        newselectedGroup = newselectedPersona?.groups?.filter(
          (gdata) => gdata?._id == selectedIds?.group
        )[0];
      } else {
        newselectedGroup = newselectedPersona?.groups[0];
        setselectedIds({...selectedIds, group : newselectedPersona?.groups[0]?._id})
      }

      setselectedGroup(newselectedGroup);
    }
  }, [selectedPersona]);

  useEffect(() => {
    let newselectedGroup = selectedGroup;
    let newselectedApp = selectedPersona;

    if (newselectedGroup !== null) {
      if (
        newselectedApp?._id == selectedIds?.group &&
        newselectedGroup?.apps
          ?.map((adata) => adata?._id)
          ?.includes(selectedIds?.app)
      ) {
        newselectedApp = newselectedGroup?.apps?.filter(
          (adata) => adata?._id == selectedIds?.app
        )[0];
      } else {
        newselectedApp = newselectedGroup?.apps[0];
        setselectedIds({...selectedIds, app : newselectedGroup?.apps[0]?._id})
      }
      setselectedApp(newselectedApp);
    }
  }, [selectedGroup]);

  useEffect(() => {
    let newselectedApp = selectedApp;
    let newselectedFunction = selectedFunction;

    if (newselectedApp !== null) {
      if (
        newselectedFunction?._id == selectedIds?.group &&
        newselectedApp?.functions
          ?.map((fdata) => fdata?._id)
          ?.includes(selectedIds?.function)
      ) {
        newselectedFunction = newselectedApp?.functions?.filter(
          (fdata) => fdata?._id == selectedIds?.function
        )[0];
      } else {
        newselectedFunction = newselectedApp?.functions[0];
        setselectedIds({...selectedIds, function : newselectedApp?.functions[0]?._id})
      }
      setselectedFunction(newselectedFunction);
    }
  }, [selectedApp]);

  useEffect(() => {
    let newselectedFunction = selectedFunction;
    let newselectedView = selectedView;

    if (newselectedFunction !== null) {
      if (
        newselectedView?._id == selectedIds?.group &&
        newselectedFunction?.views
          ?.map((vdata) => vdata?._id)
          ?.includes(selectedIds?.view)
      ) {
        newselectedView = newselectedFunction?.views?.filter(
          (vdata) => vdata?._id == selectedIds?.view
        )[0];
      } else {
        newselectedView = newselectedFunction?.views[0];
        setselectedIds({...selectedIds, view : newselectedFunction?.views[0]?._id})
      }
      setselectedView(newselectedView);
    }
  }, [selectedFunction]);

  useEffect(() => {
    // fetch(`http://18.207.194.8/me/getVMJson.php?t=personas&f=P1`, {
    //   method: "GET",
    // })
    //   .then((response) => response.json())
    //   .then((data) => {
    //     console.log(data);
    //   });

    const localData = JSON.parse(localStorage.getItem("personasData"));
    console.log(localData);

    if (localData) {
      setpersonaData(localData);
    } else {
      setpersonaData();
      fetch(`./data.json`, {
        method: "GET",
      })
        .then((response) => response.json())
        .then((data) => {
          setpersonaData(data);
        });
    }
  }, []);

  return (
    <div className="MainDiv">
      <div className="herarticalBottom">
        <div className="container d-flex position-relative">
          {bottomButtonData?.map((buttonData) => {
            return (
              <>
                <BottomPopupViewWithButton
                  personaData={personaData}
                  setpersonaData={setpersonaData}
                  selectedPersona={selectedPersona}
                  selectedGroup={selectedGroup}
                  selectedApp={selectedApp}
                  selectedFunction={selectedFunction}
                  selectedView={selectedView}
                  selectedIds={selectedIds}
                  setselectedIds={setselectedIds}
                  setselectedPersona={setselectedPersona}
                  setselectedGroup={setselectedGroup}
                  setselectedApp={setselectedApp}
                  setselectedView={setselectedView}
                  setselectedFunction={setselectedFunction}
                  buttonName={buttonData?.name}
                  placement={buttonData?.placement}
                  icon={buttonData?.icon}
                />
              </>
            );
          })}
        </div>
      </div>
    </div>
  );
};

export default Home;
